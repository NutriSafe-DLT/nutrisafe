# This work is licensed under a Creative Commons Attribution 4.0 International License
# (http://creativecommons.org/licenses/by/4.0/).
#
# Author(s): Tim Hoi√ü, Andreas Hermann
# NutriSafe Research Project
# Institute for Protection and Dependability
# Department of Computer Science
# Bundeswehr University Munich
#
# Original file (from https://github.com/hyperledger/fabric-samples) by IBM Corp:
# License SPDX-License-Identifier: Apache-2.0

version: "2"

networks:
  orderingservice_basic:
    external: true

services:


  #############################################Deoni########################################################

  peer0.deoni.de:
    container_name: peer0.deoni.de
    image: hyperledger/fabric-peer:2.2.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.deoni.de
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=DeoniMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_ADDRESS=peer0.deoni.de:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.deoni.de:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=[peer0.salers.de:7051 peer0.brangus.de:7051 peer0.pinzgauer.de:7051 peer0.tuxer.de:7051]
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.deoni.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=orderingservice_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.deoni.de:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/msp/peer/tls/tlsca.unibw.de-cert.pem
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/deoni.de/peers/peer0.deoni.de:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb.deoni.de
    networks:
      - orderingservice_basic

  couchdb.deoni.de:
    container_name: couchdb.deoni.de
    image: hyperledger/fabric-couchdb:0.4.20
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - orderingservice_basic

  cli.deoni.de:
    container_name: cli.deoni.de
    image: hyperledger/fabric-tools:2.2.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli.deoni.de
      - CORE_PEER_ADDRESS=peer0.deoni.de:7051
      - CORE_PEER_LOCALMSPID=DeoniMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp/
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/admin/tls/ca.crt
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./../configTransactions/:/opt/gopath/src/github.com/hyperledger/fabric/peer
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/deoni.de/users/Admin@deoni.de/:/etc/hyperledger/msp/users/admin/
    networks:
      - orderingservice_basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.org1.example.com
    #  - couchdb


  #############################################Salers########################################################

  peer0.salers.de:
    container_name: peer0.salers.de
    image: hyperledger/fabric-peer:2.2.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.salers.de
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=SalersMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_ADDRESS=peer0.salers.de:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.salers.de:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=[peer0.deoni.de:7051 peer0.brangus.de:7051 peer0.pinzgauer.de:7051 peer0.tuxer.de:7051]
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.salers.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=orderingservice_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.salers.de:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/msp/peer/tls/tlsca.unibw.de-cert.pem
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7061:7051
      - 7063:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/salers.de/peers/peer0.salers.de:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb.salers.de
    networks:
      - orderingservice_basic

  couchdb.salers.de:
    container_name: couchdb.salers.de
    image: hyperledger/fabric-couchdb:0.4.20
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 15984:5984
    networks:
      - orderingservice_basic

  cli.salers.de:
    container_name: cli.salers.de
    image: hyperledger/fabric-tools:2.2.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli.salers.de
      - CORE_PEER_ADDRESS=peer0.salers.de:7051
      - CORE_PEER_LOCALMSPID=SalersMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp/
      - CORE_CHAINCODE_KEEPALIVE=10
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/admin/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./../configTransactions/:/opt/gopath/src/github.com/hyperledger/fabric/peer
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/salers.de/users/Admin@salers.de:/etc/hyperledger/msp/users/admin/
    networks:
      - orderingservice_basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.org1.example.com
    #  - couchdb


  #############################################Brangus########################################################
  peer0.brangus.de:
    container_name: peer0.brangus.de
    image: hyperledger/fabric-peer:2.2.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.brangus.de
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=BrangusMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_ADDRESS=peer0.brangus.de:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.brangus.de:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=[peer0.deoni.de:7051 peer0.salers.de:7051 peer0.pinzgauer.de:7051 peer0.tuxer.de:7051]
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.brangus.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=orderingservice_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.brangus.de:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/msp/peer/tls/tlsca.unibw.de-cert.pem
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7071:7051
      - 7073:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/brangus.de/peers/peer0.brangus.de:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb.brangus.de
    networks:
      - orderingservice_basic

  couchdb.brangus.de:
    container_name: couchdb.brangus.de
    image: hyperledger/fabric-couchdb:0.4.20
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 25984:5984
    networks:
      - orderingservice_basic

  cli.brangus.de:
    container_name: cli.brangus.de
    image: hyperledger/fabric-tools:2.2.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli.brangus.de
      - CORE_PEER_ADDRESS=peer0.brangus.de:7051
      - CORE_PEER_LOCALMSPID=BrangusMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp/
      - CORE_CHAINCODE_KEEPALIVE=10
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/admin/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./../configTransactions/:/opt/gopath/src/github.com/hyperledger/fabric/peer
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/brangus.de/users/Admin@brangus.de:/etc/hyperledger/msp/users/admin/
    networks:
      - orderingservice_basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.org1.example.com
    #  - couchdb

  #############################################Pinzgauer########################################################
  peer0.pinzgauer.de:
    container_name: peer0.pinzgauer.de
    image: hyperledger/fabric-peer:2.2.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.pinzgauer.de
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=PinzgauerMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_ADDRESS=peer0.pinzgauer.de:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.pinzgauer.de:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=[peer0.deoni.de:7051 peer0.salers.de:7051 peer0.brangus.de:7051 peer0.tuxer.de:7051]
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.pinzgauer.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=orderingservice_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.pinzgauer.de:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/msp/peer/tls/tlsca.unibw.de-cert.pem
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7081:7051
      - 7083:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/pinzgauer.de/peers/peer0.pinzgauer.de:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb.pinzgauer.de
    networks:
      - orderingservice_basic

  couchdb.pinzgauer.de:
    container_name: couchdb.pinzgauer.de
    image: hyperledger/fabric-couchdb:0.4.20
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 35984:5984
    networks:
      - orderingservice_basic

  cli.pinzgauer.de:
    container_name: cli.pinzgauer.de
    image: hyperledger/fabric-tools:2.2.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli.pinzgauer.de
      - CORE_PEER_ADDRESS=peer0.pinzgauer.de:7051
      - CORE_PEER_LOCALMSPID=PinzgauerMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp/
      - CORE_CHAINCODE_KEEPALIVE=10
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/admin/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./../configTransactions/:/opt/gopath/src/github.com/hyperledger/fabric/peer
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/pinzgauer.de/users/Admin@pinzgauer.de:/etc/hyperledger/msp/users/admin/
    networks:
      - orderingservice_basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.org1.example.com
    #  - couchdb


  #############################################Tuxer########################################################
  peer0.tuxer.de:
    container_name: peer0.tuxer.de
    image: hyperledger/fabric-peer:2.2.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.tuxer.de
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=TuxerMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_ADDRESS=peer0.tuxer.de:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.tuxer.de:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=[peer0.deoni.de:7051 peer0.salers.de:7051 peer0.brangus.de:7051 peer0.pinzgauer.de:7051]
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.tuxer.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=orderingservice_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.tuxer.de:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/msp/peer/tls/tlsca.unibw.de-cert.pem
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7091:7051
      - 7093:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/tuxer.de/peers/peer0.tuxer.de:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb.tuxer.de
    networks:
      - orderingservice_basic

  couchdb.tuxer.de:
    container_name: couchdb.tuxer.de
    image: hyperledger/fabric-couchdb:0.4.20
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 36984:5984
    networks:
      - orderingservice_basic

  cli.tuxer.de:
    container_name: cli.tuxer.de
    image: hyperledger/fabric-tools:2.2.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli.tuxer.de
      - CORE_PEER_ADDRESS=peer0.tuxer.de:7051
      - CORE_PEER_LOCALMSPID=TuxerMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp/
      - CORE_CHAINCODE_KEEPALIVE=10
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/admin/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./../configTransactions/:/opt/gopath/src/github.com/hyperledger/fabric/peer
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/tuxer.de/users/Admin@tuxer.de:/etc/hyperledger/msp/users/admin/
    networks:
      - orderingservice_basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.org1.example.com
    #  - couchdb


  #############################################authority########################################################
  peer0.authority.de:
    container_name: peer0.authority.de
    image: hyperledger/fabric-peer:2.2.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.authority.de
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=AuthorityMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_ADDRESS=peer0.authority.de:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.authority.de:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=[peer0.deoni.de:7051 peer0.salers.de:7051 peer0.brangus.de:7051 peer0.tuxer.de:7051]
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.authority.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=orderingservice_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.authority.de:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/msp/peer/tls/tlsca.unibw.de-cert.pem
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7101:7051
      - 7103:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/authority.de/peers/peer0.authority.de:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb.authority.de
    networks:
      - orderingservice_basic

  couchdb.authority.de:
    container_name: couchdb.authority.de
    image: hyperledger/fabric-couchdb:0.4.20
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 37984:5984
    networks:
      - orderingservice_basic

  cli.authority.de:
    container_name: cli.authority.de
    image: hyperledger/fabric-tools:2.2.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli.authority.de
      - CORE_PEER_ADDRESS=peer0.authority.de:7051
      - CORE_PEER_LOCALMSPID=AuthorityMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp/
      - CORE_CHAINCODE_KEEPALIVE=10
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/admin/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./../configTransactions/:/opt/gopath/src/github.com/hyperledger/fabric/peer
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/authority.de/users/Admin@authority.de:/etc/hyperledger/msp/users/admin/
    networks:
      - orderingservice_basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.org1.example.com
    #  - couchdb


  #############################################schwarzfuss########################################################
  peer0.schwarzfuss.de:
    container_name: peer0.schwarzfuss.de
    image: hyperledger/fabric-peer:2.2.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.schwarzfuss.de
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=SchwarzfussMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_ADDRESS=peer0.schwarzfuss.de:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.schwarzfuss.de:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=[peer0.deoni.de:7051 peer0.salers.de:7051 peer0.brangus.de:7051 peer0.tuxer.de:7051]
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.schwarzfuss.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=orderingservice_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.schwarzfuss.de:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/msp/peer/tls/tlsca.unibw.de-cert.pem
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7111:7051
      - 7113:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/schwarzfuss.de/peers/peer0.schwarzfuss.de:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb.schwarzfuss.de
    networks:
      - orderingservice_basic

  couchdb.schwarzfuss.de:
    container_name: couchdb.schwarzfuss.de
    image: hyperledger/fabric-couchdb:0.4.20
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 38084:5984
    networks:
      - orderingservice_basic

  cli.schwarzfuss.de:
    container_name: cli.schwarzfuss.de
    image: hyperledger/fabric-tools:2.2.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli.schwarzfuss.de
      - CORE_PEER_ADDRESS=peer0.schwarzfuss.de:7051
      - CORE_PEER_LOCALMSPID=SchwarzfussMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp/
      - CORE_CHAINCODE_KEEPALIVE=10
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/admin/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./../configTransactions/:/opt/gopath/src/github.com/hyperledger/fabric/peer
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/schwarzfuss.de/users/Admin@schwarzfuss.de:/etc/hyperledger/msp/users/admin/
    networks:
      - orderingservice_basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.org1.example.com
    #  - couchdb


  #############################################duroc########################################################
  peer0.duroc.de:
    container_name: peer0.duroc.de
    image: hyperledger/fabric-peer:2.2.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.duroc.de
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=DurocMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_ADDRESS=peer0.duroc.de:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.duroc.de:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=[peer0.deoni.de:7051 peer0.salers.de:7051 peer0.brangus.de:7051 peer0.tuxer.de:7051]
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.duroc.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=orderingservice_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.duroc.de:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/msp/peer/tls/tlsca.unibw.de-cert.pem
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7121:7051
      - 7123:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/duroc.de/peers/peer0.duroc.de:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb.duroc.de
    networks:
      - orderingservice_basic

  couchdb.duroc.de:
    container_name: couchdb.duroc.de
    image: hyperledger/fabric-couchdb:0.4.20
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 38184:5984
    networks:
      - orderingservice_basic

  cli.duroc.de:
    container_name: cli.duroc.de
    image: hyperledger/fabric-tools:2.2.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli.duroc.de
      - CORE_PEER_ADDRESS=peer0.duroc.de:7051
      - CORE_PEER_LOCALMSPID=DurocMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/admin/msp/
      - CORE_CHAINCODE_KEEPALIVE=10
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/users/admin/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./../configTransactions/:/opt/gopath/src/github.com/hyperledger/fabric/peer
      - ../creatingCryptoMaterial/crypto-config/peerOrganizations/duroc.de/users/Admin@duroc.de:/etc/hyperledger/msp/users/admin/
    networks:
      - orderingservice_basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.org1.example.com
    #  - couchdb